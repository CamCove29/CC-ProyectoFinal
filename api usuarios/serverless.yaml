service: userService

provider:
  name: aws
  runtime: python3.10
  region: us-east-1
  role: ${file(../roleARN.yaml):roles.LabRole}
  environment:
    TABLE_NAME: ${self:service}-${opt:stage, 'dev'}
    AUTH_TOKENS_TABLE: ${self:service}-auth-tokens-${opt:stage, 'dev'}

functions:
  getUsers:
    handler: user_lambda.get_all_users
    events:
      - http:
          path: /users
          method: get
          cors: true

  createUser:
    handler: user_lambda.create_user
    events:
      - http:
          path: /users
          method: post
          cors: true

  getUser:
    handler: user_lambda.get_user
    events:
      - http:
          path: /users/{user_id}
          method: get
          cors: true

  updateUser:
    handler: user_lambda.update_user
    events:
      - http:
          path: /users/{user_id}
          method: put
          cors: true

  deleteUser:
    handler: user_lambda.delete_user
    events:
      - http:
          path: /users/{user_id}
          method: delete
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH  # Identificador único del usuario
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH  # Permite búsquedas por email
            Projection:
              ProjectionType: ALL

    AuthTokensTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.AUTH_TOKENS_TABLE}
        AttributeDefinitions:
          - AttributeName: token
            AttributeType: S
        KeySchema:
          - AttributeName: token
            KeyType: HASH  # Token único por usuario
        BillingMode: PAY_PER_REQUEST
